#!/bin/bash

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–µ—Ä –¥–ª—è minishell - –ø–æ–ª–æ–∂–∏—Ç–µ –≤ –ø–∞–ø–∫—É —Å minishell
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./test_minishell.sh

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

MINISHELL="./minishell"
PASSED=0
FAILED=0
TOTAL=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è minishell
check_minishell() {
    if [ ! -f "Makefile" ]; then
        echo -e "${RED}‚ùå Makefile –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ${NC}"
        exit 1
    fi
    
    echo -e "${BLUE}üî® –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º minishell...${NC}"
    make > /dev/null 2>&1
    
    if [ ! -f "$MINISHELL" ]; then
        echo -e "${RED}‚ùå minishell –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω${NC}"
        exit 1
    fi
    
    if [ ! -x "$MINISHELL" ]; then
        chmod +x "$MINISHELL"
    fi
    
    echo -e "${GREEN}‚úÖ minishell –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
run_test() {
    local test_name="$1"
    local command="$2"
    local expected_exit_code="${3:-0}"
    
    echo -n -e "${BLUE}üîç $test_name:${NC} "
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    echo "$command" > /tmp/minishell_cmd
    echo "exit" >> /tmp/minishell_cmd
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å timeout
    timeout 5s $MINISHELL < /tmp/minishell_cmd > /tmp/minishell_out 2>/tmp/minishell_err
    local exit_code=$?
    
    TOTAL=$((TOTAL + 1))
    
    if [ $exit_code -eq 124 ]; then
        echo -e "${YELLOW}‚è∞ TIMEOUT${NC}"
        FAILED=$((FAILED + 1))
    elif [ $exit_code -eq $expected_exit_code ]; then
        echo -e "${GREEN}‚úÖ PASS${NC}"
        PASSED=$((PASSED + 1))
    else
        echo -e "${RED}‚ùå FAIL (exit: $exit_code, expected: $expected_exit_code)${NC}"
        FAILED=$((FAILED + 1))
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –æ—à–∏–±–∫–∏
        head -2 /tmp/minishell_err 2>/dev/null | sed 's/^/   /'
    fi
    
    rm -f /tmp/minishell_cmd /tmp/minishell_out /tmp/minishell_err
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ —Å bash
compare_with_bash() {
    local test_name="$1"
    local command="$2"
    
    echo -n -e "${BLUE}üîç $test_name:${NC} "
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤ bash
    echo "$command" | bash > /tmp/bash_out 2>/tmp/bash_err
    local bash_exit=$?
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤ minishell
    echo -e "$command\nexit" | timeout 5s $MINISHELL > /tmp/minishell_out 2>/tmp/minishell_err
    local mini_exit=$?
    
    TOTAL=$((TOTAL + 1))
    
    if [ $mini_exit -eq 124 ]; then
        echo -e "${YELLOW}‚è∞ TIMEOUT${NC}"
        FAILED=$((FAILED + 1))
    elif diff /tmp/bash_out /tmp/minishell_out > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PASS${NC}"
        PASSED=$((PASSED + 1))
    else
        echo -e "${RED}‚ùå FAIL (output differs)${NC}"
        FAILED=$((FAILED + 1))
        echo -e "   ${YELLOW}Expected:${NC}"
        head -2 /tmp/bash_out 2>/dev/null | sed 's/^/   /'
        echo -e "   ${YELLOW}Got:${NC}"
        head -2 /tmp/minishell_out 2>/dev/null | sed 's/^/   /'
    fi
    
    rm -f /tmp/bash_out /tmp/bash_err /tmp/minishell_out /tmp/minishell_err
}

echo -e "${BLUE}üß™ –¢–µ—Å—Ç–µ—Ä minishell${NC}"
echo "=========================="

check_minishell

echo
echo -e "${BLUE}üìã –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
run_test "–ü—É—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞" ""
compare_with_bash "echo hello" "echo hello"
compare_with_bash "echo —Å —Ñ–ª–∞–≥–æ–º -n" "echo -n hello"
compare_with_bash "pwd" "pwd"
run_test "env (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏)" "env | head -3"

echo
echo -e "${BLUE}üìã –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
run_test "cd –≤ /tmp" "cd /tmp && pwd"
run_test "cd –¥–æ–º–æ–π" "cd && pwd"
run_test "export –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π" "export TEST=hello && echo \$TEST"
run_test "export –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏—è" "export TEST2"
run_test "unset –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π" "export TEST3=value && unset TEST3 && echo \$TEST3"
compare_with_bash "export –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤" "export | head -3"

echo
echo -e "${BLUE}üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:${NC}"
compare_with_bash "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è PATH" "echo \$PATH | cut -d: -f1"
compare_with_bash "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è HOME" "echo \$HOME"
run_test "Exit status" "echo \$?"
run_test "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è" "echo \$NONEXISTENT"

echo
echo -e "${BLUE}üìã –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
run_test "Redirect out" "echo test > /tmp/test_mini && cat /tmp/test_mini"
run_test "Redirect append" "echo test1 > /tmp/test_mini2 && echo test2 >> /tmp/test_mini2 && cat /tmp/test_mini2"
run_test "Redirect in" "echo testinput > /tmp/test_input && cat < /tmp/test_input"

echo
echo -e "${BLUE}üìã Heredoc:${NC}"
run_test "–ü—Ä–æ—Å—Ç–æ–π heredoc" "cat << EOF
hello
world
EOF"

echo
echo -e "${BLUE}üìã Pipes:${NC}"
run_test "–ü—Ä–æ—Å—Ç–æ–π pipe" "echo hello | cat"
run_test "Pipe —Å wc" "echo -e 'line1\nline2\nline3' | wc -l"
run_test "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ pipes" "echo hello | cat | cat | wc -c"
run_test "ls —á–µ—Ä–µ–∑ pipe" "ls -la | head -2 | wc -l"

echo
echo -e "${BLUE}üìã –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
run_test "–ö–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ ;" "echo first; echo second"
run_test "Pipe —Å redirect" "echo test | cat > /tmp/pipe_test && cat /tmp/pipe_test"
run_test "–°–ª–æ–∂–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è" "echo start && echo middle | cat && echo end"

echo
echo -e "${BLUE}üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:${NC}"
run_test "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞" "nonexistentcommand" 127
run_test "–ö–æ–º–∞–Ω–¥–∞ –±–µ–∑ –ø—Ä–∞–≤" "cd /root" 1
run_test "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å" "echo |" 2

echo
echo -e "${BLUE}üìã –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:${NC}"
run_test "–ú–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤" "echo a b c d e f g h i j"
run_test "–ö–∞–≤—ã—á–∫–∏ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ" "echo 'hello world'"
run_test "–ö–∞–≤—ã—á–∫–∏ –¥–≤–æ–π–Ω—ã–µ" "echo \"hello world\""
run_test "–°–º–µ—à–∞–Ω–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏" "echo 'hello \"world\"'"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f /tmp/test_mini /tmp/test_mini2 /tmp/test_input /tmp/pipe_test

echo
echo "=========================="
echo -e "${BLUE}üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:${NC}"
echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED${NC}"
echo -e "${RED}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED${NC}"
echo -e "${BLUE}üìù –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL${NC}"

if [ $FAILED -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!${NC}"
    exit 0
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
    exit 1
fi